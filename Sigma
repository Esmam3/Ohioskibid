
local HexUI = {}

function HexUI:CreateWindow(title)
    local window = {}
    local tabs = {}
    
    -- Create GUI elements
    local UserInputService = game:GetService("UserInputService")
    local gui = Instance.new("ScreenGui")
    local mainFrame = Instance.new("Frame")
    local scrollFrame = Instance.new("ScrollingFrame")
    local titleBar = Instance.new("Frame")
    local titleText = Instance.new("TextLabel")
    
    -- Set up main frame
    mainFrame.Name = "MainFrame"
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
    mainFrame.Size = UDim2.new(0, 300, 0, 400)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = gui
    
    -- Set up title bar
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, 0, 1, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = title
    titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleText.Font = Enum.Font.SourceSansBold
    titleText.TextSize = 16
    titleText.Parent = titleBar
    
    -- Set up scrolling frame
    scrollFrame.Name = "Content"
    scrollFrame.Position = UDim2.new(0, 0, 0, 30)
    scrollFrame.Size = UDim2.new(1, 0, 1, -30)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ScrollBarThickness = 4
    scrollFrame.ScrollingEnabled = true
    scrollFrame.Parent = mainFrame
    
    -- Dragging functionality
    local dragging = false
    local dragStart
    local startPos
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    -- Create a new tab
    function window:CreateTab(name)
        local tab = {}
        local sections = {}
        
        -- Create a section in the tab
        function tab:CreateSection(name)
            local section = {}
            local sectionFrame = Instance.new("Frame")
            local sectionTitle = Instance.new("TextLabel")
            local contentFrame = Instance.new("Frame")
            
            sectionFrame.Name = name
            sectionFrame.Size = UDim2.new(1, -20, 0, 100)
            sectionFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            sectionFrame.BorderSizePixel = 0
            sectionFrame.Position = UDim2.new(0, 10, 0, (#sections * 110) + 10)
            sectionFrame.Parent = scrollFrame
            
            sectionTitle.Name = "Title"
            sectionTitle.Size = UDim2.new(1, 0, 0, 20)
            sectionTitle.BackgroundTransparency = 1
            sectionTitle.Text = name
            sectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            sectionTitle.Font = Enum.Font.SourceSansBold
            sectionTitle.TextSize = 14
            sectionTitle.Parent = sectionFrame
            
            contentFrame.Name = "Content"
            contentFrame.Position = UDim2.new(0, 0, 0, 25)
            contentFrame.Size = UDim2.new(1, 0, 1, -25)
            contentFrame.BackgroundTransparency = 1
            contentFrame.Parent = sectionFrame
            
            function section:AddTextBox(text, defaultText, callback)
                local container = Instance.new("Frame")
                container.Size = UDim2.new(1, -20, 0, 30)
                container.Position = UDim2.new(0, 10, 0, (#contentFrame:GetChildren() * 35))
                container.BackgroundTransparency = 1
                container.Parent = contentFrame

                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(0.3, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.Text = text
                label.TextColor3 = Color3.fromRGB(255, 255, 255)
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = container

                local textBox = Instance.new("TextBox")
                textBox.Size = UDim2.new(0.7, 0, 1, -10)
                textBox.Position = UDim2.new(0.3, 0, 0, 5)
                textBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                textBox.BorderSizePixel = 0
                textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
                textBox.Text = defaultText
                textBox.Parent = container

                textBox.FocusLost:Connect(function()
                    callback(textBox.Text)
                end)

                return textBox
            end

            function section:AddButton(text, callback)
                local button = Instance.new("TextButton")
                button.Size = UDim2.new(1, -20, 0, 30)
                button.Position = UDim2.new(0, 10, 0, (#contentFrame:GetChildren() * 35))
                button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                button.BorderSizePixel = 0
                button.Text = text
                button.TextColor3 = Color3.fromRGB(255, 255, 255)
                button.Parent = contentFrame

                button.MouseButton1Click:Connect(callback)
                return button
            end
            
            function section:AddToggle(text, default, callback)
                local container = Instance.new("Frame")
                container.Size = UDim2.new(1, -20, 0, 30)
                container.Position = UDim2.new(0, 10, 0, (#contentFrame:GetChildren() * 35))
                container.BackgroundTransparency = 1
                container.Parent = contentFrame

                local toggle = Instance.new("TextButton")
                toggle.Size = UDim2.new(0, 20, 0, 20)
                toggle.Position = UDim2.new(0, 0, 0.5, -10)
                toggle.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
                toggle.BorderSizePixel = 0
                toggle.Text = ""
                toggle.Parent = container

                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(1, -30, 1, 0)
                label.Position = UDim2.new(0, 30, 0, 0)
                label.BackgroundTransparency = 1
                label.Text = text
                label.TextColor3 = Color3.fromRGB(255, 255, 255)
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = container

                local enabled = default
                toggle.MouseButton1Click:Connect(function()
                    enabled = not enabled
                    toggle.BackgroundColor3 = enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
                    callback(enabled)
                end)

                return {
                    Set = function(self, value)
                        enabled = value
                        toggle.BackgroundColor3 = enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
                        callback(enabled)
                    end,
                    Get = function(self)
                        return enabled
                    end
                }
            end
            
            function section:AddSlider(text, min, max, default, callback)
                local container = Instance.new("Frame")
                container.Size = UDim2.new(1, -20, 0, 50)
                container.Position = UDim2.new(0, 10, 0, (#contentFrame:GetChildren() * 55))
                container.BackgroundTransparency = 1
                container.Parent = contentFrame

                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(1, 0, 0, 20)
                label.BackgroundTransparency = 1
                label.Text = text
                label.TextColor3 = Color3.fromRGB(255, 255, 255)
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = container

                local sliderBack = Instance.new("Frame")
                sliderBack.Size = UDim2.new(1, 0, 0, 5)
                sliderBack.Position = UDim2.new(0, 0, 0.7, 0)
                sliderBack.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                sliderBack.BorderSizePixel = 0
                sliderBack.Parent = container

                local sliderFill = Instance.new("Frame")
                sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
                sliderFill.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                sliderFill.BorderSizePixel = 0
                sliderFill.Parent = sliderBack

                local valueLabel = Instance.new("TextLabel")
                valueLabel.Size = UDim2.new(0, 50, 0, 20)
                valueLabel.Position = UDim2.new(1, -50, 0, 0)
                valueLabel.BackgroundTransparency = 1
                valueLabel.Text = tostring(default)
                valueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                valueLabel.Parent = container

                local value = default
                local dragging = false

                sliderBack.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                        local relativeX = math.clamp((input.Position.X - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
                        value = min + (max - min) * relativeX
                        sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
                        valueLabel.Text = tostring(math.floor(value))
                        callback(value)
                    end
                end)

                UserInputService.InputChanged:Connect(function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        local relativeX = math.clamp((input.Position.X - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
                        value = min + (max - min) * relativeX
                        sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
                        valueLabel.Text = tostring(math.floor(value))
                        callback(value)
                    end
                end)

                UserInputService.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)

                return {
                    Set = function(self, newValue)
                        value = math.clamp(newValue, min, max)
                        local relativeX = (value - min) / (max - min)
                        sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
                        valueLabel.Text = tostring(math.floor(value))
                        callback(value)
                    end,
                    Get = function(self)
                        return value
                    end
                }
            end
            
            table.insert(sections, section)
            return section
        end
        
        table.insert(tabs, tab)
        return tab
    end
    
    return window
end

return HexUI
